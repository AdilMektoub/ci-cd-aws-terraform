# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-aws-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "flask-app-files"
  EB_APPLICATION_NAME       : "flask-app"
  EB_ENVRIONMENT_NAME       : "Flaskapp-env"
  DEPLOY_PACKAGE_NAME       : "flask-app-${{ github.sha  }}.zip"
  AWS_REGION_NAME           : "eu-west-3"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    my_ci_pipeline:
       runs-on: ubuntu-latest
       
       steps:
         - name: Git clone our repository
           uses: actions/checkout@v1
            
         - name: Create ZIP deployment package
           run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./  -x  *.git*
           
         - name: Configure my AWS Credentils
           uses: aws-actions/configure-aws-credentials@master
           with:
             aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY }}
             aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
             aws-region           : ${{ env.AWS_REGION_NAME }}

         - name: Copy our Deployment package to S3 bucket
           run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/
         
         - name: Print nice message on completion of CI Pipeline
           run : echo "CI Pipeline part finished successfully"
      
  #     - name: Setup Python Environment
  #       uses: actions/setup-python@v3.0.0
        
  #     - name: Install dependancies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
          
  #     - name: Run Test
  #       run: |
  #         flake8 app.py
  #         pylint app.py
          
  # deploy:
  #   needs: [test]
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout source code
  #     uses: actions/checkout@v2

  #   - name: Generate deployment package
  #     run: zip -r deploy.zip . -x '*.git*'

  #   - name: Deploy to EB
  #     uses: einaregilsson/beanstalk-deploy@v20
  #     with:
  #       aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
  #       application_name: flask-app-ci-cd
  #       environment_name: Flaskappcicd-env
        
  #       version_label: 12348
  #       region: "eu-west-3"
  #       deployment_package: deploy.zip
          
      
        
      
      
      

