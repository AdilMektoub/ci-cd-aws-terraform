# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-aws-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "flask-app"
  EB_APPLICATION_NAME       : "flask-app"
  EB_ENVRIONMENT_NAME       : "Flaskapp-env"
  DEPLOY_PACKAGE_NAME       : "flask-app-${{ github.sha  }}.zip"
  AWS_REGION_NAME           : "eu-west-3"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci_pipeline:
    # OS ubuntu on container
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    steps:
      - name: Git clone our repository
        uses: actions/checkout@v2
      
      # We need to exclude readme and other files we don't need
      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git

      # we want to copy in S3 bucket and the credential in github secret
      - name: Configure AWS credentials
        uses: aws_action/configure_aws_credentials@v1
        with:
          aws_access_key_id    : ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region           : ${{ env.AWS_REGION_NAME }}

      - name: Copy our Deployment package to S3
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/

      - name: Print CI pipeline Done
        run: echo "CI Pipeline is finished successfuly"
      
  #     - name: Setup Python Environment
  #       uses: actions/setup-python@v3.0.0
        
  #     - name: Install dependancies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
          
  #     - name: Run Test
  #       run: |
  #         flake8 app.py
  #         pylint app.py
          
  # deploy:
  #   needs: [test]
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout source code
  #     uses: actions/checkout@v2

  #   - name: Generate deployment package
  #     run: zip -r deploy.zip . -x '*.git*'

  #   - name: Deploy to EB
  #     uses: einaregilsson/beanstalk-deploy@v20
  #     with:
  #       aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
  #       application_name: flask-app-ci-cd
  #       environment_name: Flaskappcicd-env
        
  #       version_label: 12348
  #       region: "eu-west-3"
  #       deployment_package: deploy.zip
          
      
        
      
      
      

